{"version":3,"sources":["covid_icon.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","participantCount","fetch","then","response","json","result","setState","count","catch","style","display","backgroundColor","flexDirection","marginBottom","marginTop","marginLeft","marginRight","alignItems","justifyContent","height","src","icon","alt","fontSize","color","width","alignSelf","borderColor","borderStyle","borderRadius","borderWidth","paddingLeft","paddingRight","fontWeight","textAlign","fontStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","this","toLocaleString","question","emoji","label","position","Component","QuestionContainer","selectedAnswer","localStorage","getItem","props","pollResults","first","second","third","fourth","onClick","setItem","questionKey","pointerEvents","children","map","child","React","cloneElement","didSelect","showPolls","EmojiButton","isHovering","determineBackgrounColor","onMouseOver","onMouseLeave","border","borderLeftStyle","borderRightStyle","borderTopStyle","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.8eb738be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/covid_icon.56822d59.png\";","import React, { Component } from 'react';\nimport './App.css';\nimport icon from './covid_icon.png';\n\nexport class App extends Component {\n  state = {\n    participantCount: 0\n  }\n\n  async componentDidMount() {\n    fetch('api/participants')\n    .then((response) => response.json())\n    .then((result) => this.setState({ participantCount: result.count }))\n    .catch(() => {})\n  }\n\n  render() {\n    return (\n      <div style={{ display: 'flex', backgroundColor: '#fff', flexDirection: 'column', marginBottom: 100 }}>\n\n        <div style={{ display: 'flex', marginTop: 12, marginBottom: 12, marginLeft: 25, marginRight: 25, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\n          <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', }}>\n            <img style={{ height: 40, marginRight: 20 }} src={icon} alt=\"CovidIcon\"/>\n            <p style={{ fontSize: 18, color: '#575757' }}>Global COVID-19 Pandemic Poll</p>\n          </div>\n\n          <p style={{ fontSize: 18, color: '#575757' }}>Beta v0.0.1</p>\n        </div>\n        <div style={{ width: '100%', height: 1, backgroundColor: '#acb'}}/>\n        \n        <div style={{ display: 'flex', alignSelf: 'center', alignItems: 'center', flexDirection: 'column', marginTop: 50, borderColor: '#c8c8c8', borderStyle: 'solid', borderRadius: 3, borderWidth: 1, width: '82%', paddingLeft: 30, paddingRight: 30 }}>\n          <p style={{ fontWeight: 700, fontSize: 24, color: '#d67272' }}>Global COVID-19 Poll Disclaimer</p>\n          <p style={{ marginTop: -10, fontWeight: 500, fontSize: 16, color: '#575757', textAlign: 'center' }}>\n            This poll is an effort to allow the global community to shed some light into the covid-19 pandemic.<br/>\n            We ask for an honest participation. Otherwise, this could have a serious negative implication to<br/>\n            public opinion.\n          </p>\n\n          <i style={{ display: 'flex', fontWeight: 400, fontSize: 14, color: '#575757', fontStyle: 'italics', marginBottom: 20, textAlign: 'center' }}>\n            This poll is not backed by any scientific or governmental agency and thus should be treated with<br/>\n            skepticism; data could be innacurate or tampered through foreign means.\n          </i>\n        </div>\n\n        <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column', marginTop: -40 }}>\n          <p style={{ fontSize: 80, fontWeight: 700, color: '#575757', borderBottomWidth: 3, borderBottomColor: '#575757', borderBottomStyle: 'solid', textAlign: 'center' }}>\n            {this.state.participantCount.toLocaleString()}<br/>\n            🙋‍♂️&🙋‍♀️👉🗳\n          </p>\n        </div>\n\n        <div style={{ display: 'flex', flexDirection: 'column', paddingLeft: '5%', paddingRight: '5%', marginTop: -30 }}>\n\n          <QuestionContainer question={\"How did you feel when the outbreak started in Wuhan?\"}>\n            <EmojiButton emoji={\"😀\"} label={\"I felt safe\"} color={'#bca'} position={'first'}/>\n            <EmojiButton emoji={\"😟\"} label={\"I felt anxious\"} color={'#ccb3aa'} position={'second'}/>\n            <EmojiButton emoji={\"🤔\"} label={\"I wasn't sure\"} color={'#abc'} position={'third'}/>\n          </QuestionContainer>\n\n          <QuestionContainer question={\"Do you think it will get worse around the globe?\"}>\n            <EmojiButton emoji={\"🤕\"} label={\"Yes\"} color={'#a5d3b3'} position={'first'}/>\n            <EmojiButton emoji={\"🙂\"} label={\"No\"} color={'#a5c9d3'} position={'second'}/>\n            <EmojiButton emoji={\"🤐\"} label={\"Possibly, too early to tell\"} color={'#b4a5d3'} position={'third'}/>\n          </QuestionContainer>\n\n          <QuestionContainer question={\"Have you been tested for COVID-19?\"}>\n            <EmojiButton emoji={\"🧑‍🔬\"} label={\"Yes\"} color={'#c3bc87'} position={'first'}/>\n            <EmojiButton emoji={\"😬\"} label={\"No\"} color={'#879dc3'} position={'second'}/>\n            <EmojiButton emoji={\"✋\"} label={\"No, but I plan to!\"} color={'#c38794'} position={'third'}/>\n          </QuestionContainer>\n\n          <QuestionContainer question={\"Do you know where to get tested?\"}>\n            <EmojiButton emoji={\"🤓\"} label={\"Yes\"} color={'#bca'} position={'first'}/>\n            <EmojiButton emoji={\"😕\"} label={\"No\"} color={'#ccb3aa'} position={'second'}/>\n          </QuestionContainer>\n\n          <QuestionContainer question={\"Has the pandemic negatively affected your financial situation?\"}>\n            <EmojiButton emoji={\"💸\"} label={\"Yes\"} color={'#bca'} position={'first'}/>\n            <EmojiButton emoji={\"💰\"} label={\"No\"} color={'#ccb3aa'} position={'second'}/>\n          </QuestionContainer>\n\n          <QuestionContainer question={\"Do you wash your hands regularly?\"}>\n            <EmojiButton emoji={\"🧼\"} label={\"I try to\"} color={'#bca'} position={'first'}/>\n            <EmojiButton emoji={\"🛀\"} label={\"I could do better\"} color={'#ccb3aa'} position={'second'}/>\n          </QuestionContainer>\n        </div>\n\n        <p style={{ display: 'flex', fontSize: 12, marginBottom: -80, alignSelf: 'center' }}>Design and Engineering by Andrei Villasana - Seattle, WA</p>\n      </div>\n    );\n  }\n}\n\nclass QuestionContainer extends Component {\n  state = {\n    selectedAnswer: localStorage.getItem(this.props.question),\n    pollResults: { question: '', first: 0, second: 0, third: 0, fourth: 0 }\n  }\n\n  onClick = (label, position) => {\n    const { question } = this.props;\n    // User Selected Answer For The Question Answer, Store Answer in Cache - Countermeasure to spamming\n    this.setState({ selectedAnswer: label });\n    localStorage.setItem(question, label);\n\n    // Update database count for vote selected\n    fetch(`api/addVote?question=${question}&position=${position}`)\n    .then((response) => response.json())\n    .then((result) => {})\n    .catch(() => {})\n\n    // Update database count for participants if they haven't voted\n    const didAlreadyVote = localStorage.getItem('participationNumber')\n\n    if (!didAlreadyVote) {\n      fetch('api/addParticipant')\n      .then((response) => response.json())\n      .then((result) => localStorage.setItem('participationNumber', result))\n      .catch(() => {})\n    }\n  }\n\n  async componentDidMount() {\n    const questionKey = this.props.question\n    \n    fetch(`api/pollResults?question=${questionKey}`)\n    .then((response) => response.json())\n    .then((result) => this.setState({ pollResults: result }))\n    .catch(() => {})\n  }\n\n  render() {\n    const { selectedAnswer, pollResults } = this.state;\n    const pointerEvents = selectedAnswer ? 'none' : '';\n\n    return (\n      <div>\n        <p style={{ fontSize: 24, fontWeight: 400, color: '#d67272' }}>\n          {this.props.question}\n        </p>\n\n        <div style={{ display: 'flex', pointerEvents, flexDirection: 'row', justifyContent: 'space-evenly', marginBottom: 50 }}>\n          {this.props.children.map((child) => {\n            const { label, position } = child.props;\n            const clonedElement = React.cloneElement(child,\n              {\n                onClick: this.onClick,\n                didSelect: selectedAnswer === label,\n                showPolls: !!selectedAnswer,\n                pollResults: pollResults[position]\n              });\n            return clonedElement;\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass EmojiButton extends Component {\n  state = {\n    isHovering: false,\n  }\n\n  onClick = () => {\n    const { onClick, label, position } = this.props;\n    onClick(label, position);\n  }\n\n  determineBackgrounColor = () => {\n    const { isHovering } = this.state;\n    const { didSelect, color } = this.props;\n\n    if (isHovering || didSelect) {\n      return color;\n    } else {\n      return '#fff';\n    }\n  }\n\n  render() {\n    const { showPolls, pollResults, emoji, label } = this.props;\n\n    return (\n      <div>\n        <button\n          onMouseOver={() => this.setState({ isHovering: true })}\n          onMouseLeave={() => this.setState({ isHovering: false })}\n          style={{ display: 'flex', width: 250, flexDirection: 'column', alignItems: 'center', justifyContent: 'center', border: 'none', backgroundColor: this.determineBackgrounColor(), marginTop: 10, borderWidth: 1, borderRadius: 2, borderColor: '#c8c8c8', borderLeftStyle: 'solid', borderRightStyle: 'solid', borderTopStyle: 'solid' }}\n          onClick={this.onClick}>\n          <p style={{ display: 'flex', fontSize: 60, textAlign: 'center' }}>\n            {emoji}\n          </p>\n          <p style={{ display: 'flex', fontWeight: 400, color: '#575757', fontSize: 24, textAlign: 'center', marginTop: -30, marginBottom: 60 }}>\n            {label}\n          </p>\n          <div style={{ display: 'flex', width: 250, height: 8, backgroundColor: this.props.color, marginBottom: -3 }}/>\n        </button>\n        {showPolls &&\n          <p style={{ alignSelf: 'center', textAlign: 'center', fontSize: 22 }}>\n            {pollResults.toLocaleString()} 🗳<br/>\n            submitted\n          </p>}\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}